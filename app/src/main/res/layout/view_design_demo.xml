<?xml version="1.0" encoding="utf-8"?>
<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true"
    tools:context=".view.DesignSupportLibraryDemoActivity">

    <!--CoordinatorLayout 是一个让子 Views 协调工作的布局-->
    <android.support.design.widget.CoordinatorLayout
        android:id="@+id/coordinatorLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:fitsSystemWindows="true">

        <!--用AppBarLayout包裹 Toolbar  Toolbar 与 CoordinatorLayout 一起工作的更加完美-->
        <android.support.design.widget.AppBarLayout
            android:id="@+id/appbar"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:fitsSystemWindows="true"
            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">

            <android.support.design.widget.CollapsingToolbarLayout
                android:layout_width="match_parent"
                android:layout_height="220dp"
                android:fitsSystemWindows="true"
                app:contentScrim="?attr/colorPrimary"
                app:expandedTitleMarginEnd="64dp"
                app:expandedTitleMarginStart="48dp"
                app:layout_collapseParallaxMultiplier="0.6"
                app:layout_scrollFlags="scroll|exitUntilCollapsed">
                <!--1.app:layout_collapseParallaxMultiplier CollapsingToolbarLayout滑动时，
                子视图的视觉差，可以通过属性app:layout_collapseParallaxMultiplier=”0.6”改变。
                值de的范围[0.0,1.0]，值越大视察越大
                2.app:contentScrim=”?attr/colorPrimary”
                ToolBar被折叠到顶部固定时候的背景，你可以调用setContentScrim(Drawable)方法改变背景或者
                 在属性中使用 app:contentScrim=”?attr/colorPrimary”来改变背景。
                3.app:layout_collapseMode=”parallax” 子视图的折叠模式，在子视图设置，有两种
                “pin”：固定模式，在折叠的时候最后固定在顶端；
                “parallax”：视差模式，在折叠的时候会有个视差折叠的效果。
                我们可以在布局中使用属性app:layout_collapseMode=”parallax”来改变。-->
                <ImageView
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:fitsSystemWindows="true"
                    android:scaleType="fitXY"
                    android:src="@mipmap/aa"
                    app:layout_collapseMode="parallax" />

                <!--android:background="?attr/colorPrimary"如果設置这个属性。 这里会有个横条-->
                <android.support.v7.widget.Toolbar
                    android:id="@+id/toolbar"
                    android:layout_width="match_parent"
                    android:layout_height="?attr/actionBarSize"
                    app:layout_collapseMode="pin"
                    app:layout_scrollFlags="scroll|enterAlways"
                    app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
                    app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar" />

            </android.support.design.widget.CollapsingToolbarLayout>
            <!--app:layout_scrollFlags="scroll|enterAlways"  设置这个属性 可以让ToolBar自动滚出屏幕-->
            <!--1. scroll: 所有想滚动出屏幕的view都需要设置这个flag，-->
            <!--没有设置这个flag的view将被固定在屏幕顶部。例如，TabLayout 没有设置这个值，将会停留在屏幕顶部。-->
            <!--2. enterAlways: 设置这个flag时，向下的滚动都会导致该view变为可见，启用快速“返回模式”。-->
            <!--3. enterAlwaysCollapsed:-->
            <!--当你的视图已经设置minHeight属性又使用此标志时，你的视图只能已最小高度进入，只有当滚动视图到达顶部时才扩大到完整高度。-->
            <!--4. exitUntilCollapsed: 滚动退出屏幕，最后折叠在顶端。-->

            <!--app:tabMode scrollable 可以滚动 -->
            <!--app:tabGravity fill或者center-->
            <!--app:layout_scrollFlags="scroll|enterAlways"  如果设置这个属性 tabLayout也可以滚出屏幕-->
            <!--enterAlways  如果不设置这个属性 只是设置scroll  就是只有数据显示第一行在往下拉会出现头部
            如果设置的话   只要是往下面拉 就会出现-->
            <android.support.design.widget.TabLayout
                android:id="@+id/tabs"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                app:layout_scrollFlags="scroll"
                app:tabMode="scrollable" />


        </android.support.design.widget.AppBarLayout>

        <!--<android.support.v4.view.ViewPager-->
        <!--android:id="@+id/viewpager"-->
        <!--android:layout_width="match_parent"-->
        <!--android:layout_height="match_parent"-->
        <!--app:layout_behavior="@string/appbar_scrolling_view_behavior" />-->

        <!--<ScrollView   因为ScrollView 没有被设计成与 CoordinatorLayout 协同工作所以这里使用android.support.v4.widget.NestedScrollView-->
        <android.support.v4.widget.NestedScrollView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:fadeScrollbars="false"
            android:fillViewport="true"
            app:layout_behavior="@string/appbar_scrolling_view_behavior">

            <!--LinearLayout如果向在里面使用必须添加app:layout_behavior="@string/appbar_scrolling_view_behavior"-->
            <!--否则它会放到toolbar下面-->


            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:orientation="vertical">
                <!--app:layout_behavior="@string/appbar_scrolling_view_behavior">-->

                <android.support.design.widget.TextInputLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content">
                    <EditText
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:hint="Username" />
                </android.support.design.widget.TextInputLayout>

                <android.support.design.widget.TextInputLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content">
                    <EditText
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:hint="Username" />
                </android.support.design.widget.TextInputLayout>

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="200dp"
                    android:gravity="bottom"
                    android:text="fjdsaklgjfdsa" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="200dp"
                    android:gravity="bottom"
                    android:text="fjdsaklgjfdsa" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="200dp"
                    android:gravity="bottom"
                    android:text="fjdsaklgjfdsa" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="200dp"
                    android:gravity="bottom"
                    android:text="fjdsaklgjfdsa" />

            </LinearLayout>

        </android.support.v4.widget.NestedScrollView>

        <android.support.design.widget.FloatingActionButton
            android:id="@+id/fab"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="bottom|end"
            android:layout_margin="16dp"
            android:src="@mipmap/ic_launcher" />

    </android.support.design.widget.CoordinatorLayout>

</android.support.v4.widget.DrawerLayout>